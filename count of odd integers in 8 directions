Input:
6
56 56 44 10 42 64
81 54 83 16 50 57
48 93 12 66 78 32
75 84 54 65 85 97
77 32 95 12 65 66
25 13 96 67 98 43
12


Output:
7


Explanation:
X = 12
Here 12 has occurred for two times in the matrix.
So consider the first occurrence of 12 which is present at the 3rd row and the 3rd column.
The elements present in all the eight directions are
56 56 44 10 42 64
81 54 83 16 50 57
48 93 12 66 78 32
75 84 54 65 85 97
77 32 95 12 65 66
25 13 96 67 98 43
So the count of odd integers in all the eight directions of 12 is 7.
Hence the output is 7


code:
#include<stdio.h>
#include <stdlib.h>

int main()
{
int n,f=0;
scanf("%d",&n);
int a[n][n];
for(int i=0;i<n;i++){
    for(int j=0;j<n;j++){
        scanf("%d",&a[i][j]);
    }
}
int x,xi,xj,c=0;
scanf("%d",&x);
for(int i=0;i<n;i++){
    for(int j=0;j<n;j++){
        if(x==a[i][j]){
            xi=i;
            xj=j;
            f=1;
            break;
        }
    }
    if(f==1)
        break;
}
if(f==0){
    printf("-1");
    return 0;
}
for(int i=xi-1;i>=0;i--){
    if(a[i][xj]%2!=0)
        c++; 
}
for(int i=xi-1,j=xj+1;i>=0&&j<n;i--,j++){
    if(a[i][j]%2!=0)
        c++;
}
for(int i=xj+1;i<n;i++){
    if(a[xi][i]%2!=0)
        c++;
}
for(int i=xi+1,j=xj+1;i<n&&j<n;i++,j++){
    if(a[i][j]%2!=0)
        c++;
}
for(int i=xi+1;i<n;i++){
    if(a[i][xj]%2!=0)
        c++;
}
for(int i=xi+1,j=xj-1;i<n&&j>=0;i++,j--){
    if(a[i][j]%2!=0)
        c++;
}
for(int i=xj-1;i>=0;i--){
    if(a[xi][i]%2!=0)
        c++;
}
for(int i=xi-1,j=xj-1;i>=0&&j>=0;i--,j--){
    if(a[i][j]%2!=0)
        c++;
}
printf("%d",c);
return 0;
}
